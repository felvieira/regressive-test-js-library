{"mappings":"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","sources":["<anon>","index.js","lib/makeReporter.js","lib/puppeterConfig.js","lib/mathImages.js","lib/puppeterConfigFormat.js","lib/config/scenariosConfig.js","lib/config/viewport.json","lib/helpers/logger.js","lib/helpers/utils.js","lib/eraseUnusedFolders.js"],"sourcesContent":["var $bD1u6$path = require(\"path\");\nvar $bD1u6$fs = require(\"fs\");\nvar $bD1u6$createhtml = require(\"create-html\");\nvar $bD1u6$puppeteer = require(\"puppeteer\");\nvar $bD1u6$yargsyargs = require(\"yargs/yargs\");\nvar $bD1u6$util = require(\"util\");\nvar $bD1u6$pngjs = require(\"pngjs\");\nvar $bD1u6$pixelmatch = require(\"pixelmatch\");\nvar $bD1u6$sharp = require(\"sharp\");\nvar $bD1u6$moment = require(\"moment\");\n\n\nvar $ee1bd6e63bb547d0$var$$parcel$__dirname = $bD1u6$path.resolve(__dirname, \"..\");\n\"use strict\";\n\nvar $ad2633f7f5221f8f$exports = {};\n\nvar $ad2633f7f5221f8f$var$$parcel$__dirname = $bD1u6$path.resolve(__dirname, \"../lib\");\n\"use strict\";\n\nvar $ad2633f7f5221f8f$require$fs = $bD1u6$fs.promises;\n\n\nclass $ad2633f7f5221f8f$var$ReportGenerator {\n    constructor(){\n        this.IMAGE_BASE_PATH = \"../\";\n        this.REFERENCE_IMAGE_PATH = `${this.IMAGE_BASE_PATH}reference/`;\n        this.REPORTER_PATH = $bD1u6$path.resolve($ad2633f7f5221f8f$var$$parcel$__dirname, \"..\", \"reporter/\");\n    }\n    getImagePath(type, imageFilePng, today, compatibility) {\n        switch(type){\n            case \"reference\":\n                return `${this.REFERENCE_IMAGE_PATH}${imageFilePng}`;\n            case \"test\":\n                return `${this.IMAGE_BASE_PATH}${today}`;\n            case \"result\":\n                if (compatibility) return `${this.IMAGE_BASE_PATH}${today.split(\".\")[0]}-diff.png`;\n                return \"\";\n            default:\n                return \"\";\n        }\n    }\n    createCard({ viewPort: viewPort, scenarioLabel: scenarioLabel, difference: difference, compatibility: compatibility, imageFilePng: imageFilePng, today: today, pageInitial: pageInitial, redirectToUrl: redirectToUrl }, i) {\n        const createCardContentColumn = (type)=>{\n            const imagePath = this.getImagePath(type, imageFilePng, today, compatibility);\n            return `\n                <div class=\"card-content-column ${type}\">\n                    <div class=\"card-content-column-label\">${type.charAt(0).toUpperCase() + type.slice(1)}</div>\n                    <div class=\"card-content-column-img\">\n                        ${imagePath ? `<img src=\"${imagePath}\" alt=\"\">` : \"\"}\n                    </div>\n                </div>`.trim();\n        };\n        const createModal = ()=>`\n            <div id=\"modal-${i}\" class=\"hide\">\n                <div class=\"close\"></div>\n                <div class=\"container\">\n                    <div class=\"modal content\">\n                        <img src=\"${this.IMAGE_BASE_PATH}${today}\" alt=\"\">\n                        <img src=\"${this.REFERENCE_IMAGE_PATH}${imageFilePng}\" alt=\"\">\n                    </div>\n                </div>\n            </div>`.trim();\n        return `\n            <div class=\"card\" data-scenario=\"${viewPort}\" data-label=\"${scenarioLabel}\" data-difference=\"${difference || \"\"}\" data-compatibility=\"${compatibility || \"\"}\">\n                <div class=\"card-label\">\n                    <span class=\"page\">P\\xe1gina: ${scenarioLabel}</span> |\n                    <span class=\"compatibility\">${compatibility ? `Taxa de Compatibilidade:${compatibility}%` : \"Imagem com tamanhos diferentes\"}</span> |\n                    <span class=\"pixels\">${difference ? `${difference} pixels diferentes` : \"\"}</span> |\n                    <span>URL: <a href=\"${redirectToUrl ? redirectToUrl : pageInitial}\" target=\"_blank\">${redirectToUrl ? redirectToUrl : pageInitial}</a></span>\n                </div>\n                <div class=\"card-content\">\n                    ${[\n            \"reference\",\n            \"test\",\n            \"result\"\n        ].map(createCardContentColumn).join(\"\")}\n                </div>\n                <div class=\"card-filename\">filename: ${imageFilePng}</div>\n                ${createModal()}\n            </div>`.trim();\n    }\n    createHeaderButtons(items) {\n        const viewPorts = new Set(items.map((item)=>item.viewPort));\n        return Array.from(viewPorts).map((viewPort)=>{\n            const label = viewPort.charAt(0).toUpperCase() + viewPort.slice(1);\n            return `<button class=\"${viewPort}\">${label}</button>`;\n        }).join(\" \");\n    }\n    createHeader(items) {\n        const viewPorts = new Set(items.map((item)=>item.viewPort));\n        const buttons = Array.from(viewPorts).map((viewPort)=>{\n            const label = viewPort.charAt(0).toUpperCase() + viewPort.slice(1);\n            return `<button class=\"${viewPort}\">${label}</button>`;\n        }).join(\" \");\n        return `\n        <div class=\"header-title\">Interface report</div>\n        <div class=\"header-container-search\">\n          <div class=\"header-container-search-buttons\">\n            ${buttons}\n            <button class=\"passed\">Aprovados</button>\n            <button class=\"reproved\">Reprovados</button>\n            <button class=\"sizes\">Falhas</button>\n            <button class=\"all\">Todos</button>\n          </div>\n          <div class=\"header-container-search-input\">\n            <input type=\"text\" placeholder=\"Insira sua busca aqui ...\"/>\n          </div>\n        </div>`.trim();\n    }\n    async generate(items) {\n        const reportFilePath = `${this.REPORTER_PATH}/index.html`;\n        const html = $bD1u6$createhtml({\n            title: \"Relat\\xf3rio de Interface\",\n            script: \"script.js\",\n            css: \"style.css\",\n            lang: \"pt-br\",\n            head: `<meta charset=\"utf-8\">\n                 <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n                 <meta name=\"description\" content=\"\">\n                 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n                 <script src=\"https://unpkg.com/image-compare-viewer/dist/image-compare-viewer.min.js\"></script>`,\n            body: `<div id=\"root\"><div class=\"container\">${this.createHeader(items)}${items.map(this.createCard.bind(this)).join(\"\")}</div></div>`,\n            favicon: \"favicon.png\"\n        });\n        try {\n            await $ad2633f7f5221f8f$require$fs.writeFile(reportFilePath, html);\n            console.log(\"\\nP\\xe1gina de relat\\xf3rio criada com sucesso!\");\n        } catch (error) {\n            console.error(\"\\nErro ao criar relat\\xf3rio de teste:\", error);\n        }\n    }\n}\nconst $ad2633f7f5221f8f$var$makeReporter = new $ad2633f7f5221f8f$var$ReportGenerator();\n$ad2633f7f5221f8f$exports = $ad2633f7f5221f8f$var$makeReporter;\n\n\nvar $505398d2bbe3bd6c$exports = {};\n\nvar $505398d2bbe3bd6c$var$$parcel$__dirname = $bD1u6$path.resolve(__dirname, \"../lib\");\n\"use strict\";\n\n\nvar $308b4c8e5dd917ed$exports = {};\n\nvar $308b4c8e5dd917ed$var$$parcel$__dirname = $bD1u6$path.resolve(__dirname, \"../lib\");\n\"use strict\";\n\n\n\nvar $308b4c8e5dd917ed$require$PNG = $bD1u6$pngjs.PNG;\n\n\n\nconst $308b4c8e5dd917ed$var$writeFileAsync = $bD1u6$util.promisify($bD1u6$fs.writeFile);\nconst $308b4c8e5dd917ed$var$readFileAsync = $bD1u6$util.promisify($bD1u6$fs.readFile);\nclass $308b4c8e5dd917ed$var$ImageComparator {\n    constructor(scenario){\n        this.referenceFilePath = this._resolvePath(\"reference\", scenario.imageFilePng);\n        this.testFilePath = this._resolvePath(scenario.today);\n        this.diffFilePath = this._resolvePath(scenario.today.split(\"/\")[0], `${scenario.imageFilePng.split(\".\")[0]}-diff.png`);\n        this.reporterLocation = this._resolvePath(scenario.today.split(\"/\")[0], `${scenario.imageFilePng.split(\".\")[0]}.json`);\n        this.scenario = scenario;\n    }\n    _resolvePath(...paths) {\n        return $bD1u6$path.resolve($308b4c8e5dd917ed$var$$parcel$__dirname, \"..\", ...paths);\n    }\n    async _resizeImage(imagePath, newHeight) {\n        const output = `${imagePath}-resized.png`;\n        try {\n            const image = await $bD1u6$sharp(imagePath);\n            const metadata = await image.metadata();\n            const difference = newHeight - metadata.height;\n            await image.extend({\n                top: 0,\n                bottom: difference,\n                left: 0,\n                right: 0,\n                background: {\n                    r: 0,\n                    g: 0,\n                    b: 0,\n                    alpha: 1\n                }\n            }).toFile(output);\n            console.log(\"Imagem redimensionada salva em:\", output);\n            return output;\n        } catch (error) {\n            console.error(\"Erro ao redimensionar imagem:\", error);\n            throw error;\n        }\n    }\n    async _generateReport(difference, compatibility) {\n        const reportData = {\n            ...this.scenario,\n            difference: difference,\n            compatibility: compatibility.toFixed(2)\n        };\n        try {\n            await $308b4c8e5dd917ed$var$writeFileAsync(this.reporterLocation, JSON.stringify(reportData));\n        } catch (error) {\n            console.error(\"Erro ao gerar relat\\xf3rio JSON:\", error);\n            throw error;\n        }\n    }\n    async _saveTestImage(diff) {\n        try {\n            await $308b4c8e5dd917ed$var$writeFileAsync(this.diffFilePath, $308b4c8e5dd917ed$require$PNG.sync.write(diff));\n        } catch (error) {\n            console.error(\"Erro ao salvar imagem de diferen\\xe7a:\", error);\n            throw error;\n        }\n    }\n    async _compareImages(referenceImage, testImage) {\n        const { width: width, height: height } = referenceImage;\n        const diff = new $308b4c8e5dd917ed$require$PNG({\n            width: width,\n            height: height\n        });\n        const differentPixels = $bD1u6$pixelmatch(referenceImage.data, testImage.data, diff.data, width, height, {\n            threshold: 0.1\n        });\n        const compatibility = 100 - differentPixels * 100 / (width * height);\n        await this._generateReport(differentPixels, compatibility);\n        await this._saveTestImage(diff);\n    }\n    async compareAndSaveImagesAndGenerateReports() {\n        let referenceImage = $308b4c8e5dd917ed$require$PNG.sync.read(await $308b4c8e5dd917ed$var$readFileAsync(this.referenceFilePath));\n        let testImage = $308b4c8e5dd917ed$require$PNG.sync.read(await $308b4c8e5dd917ed$var$readFileAsync(this.testFilePath));\n        const referenceHeight = referenceImage.height;\n        const testHeight = testImage.height;\n        const heightDifference = Math.abs(referenceHeight - testHeight);\n        if (heightDifference > 0) {\n            if (testHeight < referenceHeight) {\n                console.log(`Imagem de teste \\xe9 menor que a imagem de refer\\xeancia, redimensionando imagem de teste...`);\n                const resizedImagePath = await this._resizeImage(this.testFilePath, heightDifference);\n                testImage = $308b4c8e5dd917ed$require$PNG.sync.read(await $308b4c8e5dd917ed$var$readFileAsync(resizedImagePath)); // Usa a imagem redimensionada para comparação\n            } else {\n                console.log(`Imagem de refer\\xeancia \\xe9 menor que a imagem de teste, redimensionando imagem de refer\\xeancia...`);\n                const resizedImagePath = await this._resizeImage(this.referenceFilePath, heightDifference);\n                referenceImage = $308b4c8e5dd917ed$require$PNG.sync.read(await $308b4c8e5dd917ed$var$readFileAsync(resizedImagePath)); // Usa a imagem redimensionada para comparação\n            }\n        }\n        await this._compareImages(referenceImage, testImage);\n    }\n}\n$308b4c8e5dd917ed$exports = async (scenario)=>{\n    const comparator = new $308b4c8e5dd917ed$var$ImageComparator(scenario);\n    await comparator.compareAndSaveImagesAndGenerateReports();\n};\n\n\nvar $92f5201932e10347$exports = {};\n\nvar $92f5201932e10347$var$$parcel$__dirname = $bD1u6$path.resolve(__dirname, \"../lib\");\n\"use strict\";\n\n\nclass $92f5201932e10347$var$ScenarioFormatter {\n    constructor(scenario, viewPort){\n        this.scenario = scenario;\n        this.viewPort = viewPort;\n    }\n    static formatName(viewPort, label) {\n        return `${viewPort.label.toUpperCase()}-${label.replace(/[^A-Z0-9]/gi, \"_\")}`;\n    }\n    existsInPath(referencePathFolder, referenceImage) {\n        return $bD1u6$fs.existsSync($bD1u6$path.resolve($92f5201932e10347$var$$parcel$__dirname, \"..\", referencePathFolder.split(\"/\")[1], referenceImage));\n    }\n    async getFolderPath(referencePathFolder, referenceImage) {\n        const date = new Date();\n        const folderName = this.existsInPath(referencePathFolder, referenceImage) ? `${date.getDate()}_${date.getMonth() + 1}_${date.getFullYear()}` : \"reference\";\n        if (!$bD1u6$fs.existsSync($bD1u6$path.resolve($92f5201932e10347$var$$parcel$__dirname, \"..\", folderName))) $bD1u6$fs.mkdirSync($bD1u6$path.resolve($92f5201932e10347$var$$parcel$__dirname, \"..\", folderName));\n        return {\n            folderName: folderName,\n            type: folderName === \"reference\" ? \"reference\" : \"test\"\n        };\n    }\n    async formatComplete() {\n        const formattedName = $92f5201932e10347$var$ScenarioFormatter.formatName(this.viewPort, this.scenario.label);\n        const imagePath = `./reference/${formattedName}.png`;\n        const { folderName: folderName, type: type } = await this.getFolderPath(\"./reference\", `${formattedName}.png`);\n        return {\n            ...this.scenario,\n            viewPort: this.viewPort.label,\n            scenarioLabel: `${this.scenario.label} - ${this.viewPort.label}`,\n            imageFileName: formattedName,\n            imageFilePng: `${formattedName}.png`,\n            today: $bD1u6$path.join(folderName, `${formattedName}.png`),\n            test: $bD1u6$path.join(\"test\", `${formattedName}.png`),\n            type: type\n        };\n    }\n}\n$92f5201932e10347$exports = {\n    formatScenario: async (scenario, viewPort)=>{\n        const formatter = new $92f5201932e10347$var$ScenarioFormatter(scenario, viewPort);\n        return await formatter.formatComplete();\n    }\n};\n\n\nvar $505398d2bbe3bd6c$require$formatScenario = $92f5201932e10347$exports.formatScenario;\n\nconst { argv: $505398d2bbe3bd6c$var$argv } = $bD1u6$yargsyargs(process.argv.slice(2));\nclass $505398d2bbe3bd6c$var$PuppeteerHandler {\n    constructor(scenario, viewPort){\n        this.scenario = scenario;\n        this.viewPort = viewPort;\n        this.isHeadless = $505398d2bbe3bd6c$var$argv.headless !== \"false\";\n    }\n    async initializePage(browser) {\n        const page = await browser.newPage();\n        await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\");\n        await page.setViewport({\n            width: this.viewPort.width,\n            height: this.viewPort.height,\n            deviceScaleFactor: 1\n        });\n        return page;\n    }\n    async executePageScript(page) {\n        if (this.scenario.pageScript) {\n            const pageScriptInit = require(this.scenario.pageScript);\n            await pageScriptInit(page, this.scenario, this.browser, this.viewPort);\n        } else await this.navigateToPage(page);\n    }\n    async navigateToPage(page) {\n        const url = this.scenario.pageInitial || this.scenario.url;\n        await page.goto(url, {\n            waitUntil: \"networkidle0\"\n        });\n        await page.waitForSelector(this.scenario.targetElementToWait);\n    }\n    async takeScreenshot(page) {\n        if (this.scenario.fullPage) await page.screenshot({\n            path: $bD1u6$path.resolve($505398d2bbe3bd6c$var$$parcel$__dirname, \"..\", this.scenario.today),\n            type: \"png\",\n            fullPage: true\n        });\n        else {\n            const element = this.scenario.target ? await page.$(this.scenario.target) : page;\n            const enableFullPage = this.scenario.breakPointFullpage && this.scenario.breakPointFullpage.includes(this.viewPort);\n            await element.screenshot({\n                path: $bD1u6$path.resolve($505398d2bbe3bd6c$var$$parcel$__dirname, \"..\", this.scenario.today),\n                type: \"png\",\n                fullPage: enableFullPage\n            });\n        }\n    }\n    async run() {\n        this.scenario = await $505398d2bbe3bd6c$require$formatScenario(this.scenario, this.viewPort);\n        this.browser = await $bD1u6$puppeteer.launch({\n            headless: this.isHeadless,\n            userDataDir: $505398d2bbe3bd6c$var$argv.userDataDir || \"./user_data\",\n            args: [\n                '--proxy-server=\"direct://\"',\n                \"--proxy-bypass-list=*\",\n                \"--disable-setuid-sandbox\",\n                \"--no-sandbox\",\n                \"--ignore-certificate-errors\",\n                \"--enable-features=NetworkService\",\n                \"--disable-dev-shm-usage\"\n            ]\n        });\n        const page = await this.initializePage(this.browser);\n        try {\n            await this.executePageScript(page);\n            await this.takeScreenshot(page);\n            if (this.scenario.type !== \"reference\") await $308b4c8e5dd917ed$exports(this.scenario);\n        } catch (error) {\n            console.error(`Error on page ${this.scenario.pageInitial || this.scenario.url}:\\n${error}`);\n        } finally{\n            await page.close();\n            await this.browser.close();\n        }\n        return this.scenario;\n    }\n}\n$505398d2bbe3bd6c$exports = async (scenario, viewPort)=>{\n    const handler = new $505398d2bbe3bd6c$var$PuppeteerHandler(scenario, viewPort);\n    return await handler.run();\n};\n\n\nvar $673c0e93d40a2101$exports = {};\nconst $673c0e93d40a2101$var$scenariosConfig = (urlBase)=>{\n    console.log(\"> A url pros prints \\xe9:\", urlBase);\n    return [\n        {\n            label: \"Google Home\",\n            pageInitial: urlBase,\n            targetElementToWait: 'form[action=\"/search\"]',\n            fullPage: true\n        },\n        {\n            label: \"Google Search Results for Tesla\",\n            pageInitial: urlBase,\n            targetElementToWait: 'form[action=\"/search\"]',\n            fullPage: true,\n            pageScript: \"../scripts/scenario/googleSearch.js\",\n            searchQuery: \"Tesla\",\n            targetElementToWaitAfterRedirect: \"#search\"\n        }\n    ];\n};\n$673c0e93d40a2101$exports = {\n    scenariosConfig: $673c0e93d40a2101$var$scenariosConfig\n};\n\n\nvar $ee1bd6e63bb547d0$require$scenariosConfig = $673c0e93d40a2101$exports.scenariosConfig;\nvar $25e3e73fea0fcd75$exports = {};\n$25e3e73fea0fcd75$exports = JSON.parse('[{\"label\":\"desktop\",\"width\":1280,\"height\":1024},{\"label\":\"tablet\",\"width\":1024,\"height\":768},{\"label\":\"phone\",\"width\":320,\"height\":480}]');\n\n\nvar $b1e669000de16015$exports = {};\n\"use strict\";\nclass $b1e669000de16015$var$Logger {\n    constructor(){\n        this.fullLine = \"#\".repeat(105);\n        this.shortLine = \"#\".repeat(97);\n    }\n    logWithFullLine(message) {\n        console.log(`${this.fullLine}\\n${message}\\n${this.fullLine}`);\n    }\n    logWithShortLine(message) {\n        console.log(`${this.shortLine}\\n${message}\\n${this.shortLine}`);\n    }\n    logInitTest(scenario, vp, type) {\n        const message = `##### Teste ${type} em: '${scenario.label}' no viewport: '${vp.label}' #####`;\n        this.logWithFullLine(message);\n    }\n    logFinal(scenario, vp) {\n        const message = `##### Teste Finalizado em: '${scenario.label}' no viewport: '${vp.label}' #####`;\n        this.logWithFullLine(message);\n    }\n    logLine() {\n        console.log(`\\n${this.shortLine}\\n`);\n    }\n    logLineFirst() {\n        console.log(`\\n${this.fullLine}`);\n    }\n    logLineLast() {\n        console.log(`${this.fullLine}\\n`);\n    }\n}\nconst $b1e669000de16015$var$logger = new $b1e669000de16015$var$Logger();\n$b1e669000de16015$exports = {\n    logInitTest: (scenario, vp, type)=>$b1e669000de16015$var$logger.logInitTest(scenario, vp, type),\n    logLineFirst: ()=>$b1e669000de16015$var$logger.logLineFirst(),\n    logLineLast: ()=>$b1e669000de16015$var$logger.logLineLast(),\n    logLine: ()=>$b1e669000de16015$var$logger.logLine(),\n    logFinal: (scenario, vp)=>$b1e669000de16015$var$logger.logFinal(scenario, vp),\n    logger: $b1e669000de16015$var$logger\n};\n\n\nvar $ee1bd6e63bb547d0$require$logFinal = $b1e669000de16015$exports.logFinal;\nvar $ee1bd6e63bb547d0$require$logInitTest = $b1e669000de16015$exports.logInitTest;\nvar $58ab8aa5dab4a8db$exports = {};\n\"use strict\";\n\n\n\nfunction $58ab8aa5dab4a8db$var$deleteFolderRecursive(path) {\n    if ($bD1u6$fs.existsSync(path)) {\n        $bD1u6$fs.readdirSync(path).forEach(function(file, index) {\n            var curPath = path + \"/\" + file;\n            if ($bD1u6$fs.lstatSync(curPath).isDirectory()) // recurse\n            $58ab8aa5dab4a8db$var$deleteFolderRecursive(curPath);\n            else // delete file\n            $bD1u6$fs.unlinkSync(curPath);\n        });\n        $bD1u6$fs.rmdirSync(path);\n    }\n}\n// Delete Folder\nasync function $58ab8aa5dab4a8db$var$removeDir(dir_path) {\n    if ($bD1u6$fs.existsSync(dir_path)) {\n        $bD1u6$fs.readdirSync(dir_path).forEach(function(entry) {\n            var entry_path = $bD1u6$path.join(dir_path, entry);\n            if ($bD1u6$fs.lstatSync(entry_path).isDirectory()) $58ab8aa5dab4a8db$var$removeDir(entry_path);\n            else $bD1u6$fs.unlinkSync(entry_path);\n        });\n        $bD1u6$fs.rmdirSync(dir_path);\n    }\n}\n// Delete Files in folder\nasync function $58ab8aa5dab4a8db$var$emptyDir(directory, folderName) {\n    if (!$bD1u6$fs.existsSync(`${directory}`)) {\n        console.log(`>Pasta ${directory} n\\xe3o existe, criando a pasta.`);\n        await $bD1u6$fs.mkdirSync(`${directory}`);\n    }\n    console.log(`>> Apagando arquivos de ${folderName} antigos.`);\n    $bD1u6$fs.readdir(directory, (err, files)=>{\n        if (err) console.log(err);\n        for (const file of files)$bD1u6$fs.unlink($bD1u6$path.join(directory, file), (err)=>{\n            if (err) console.log(err);\n        });\n    });\n}\n// ForEach Synchronous\nfunction $58ab8aa5dab4a8db$var$forEachSync(array, callback) {\n    let lastIndex = array.length - 1;\n    let startIndex = 0;\n    return new Promise((resolve, reject)=>{\n        // Finish all\n        let functionToIterateWith = (currIndex)=>{\n            if (currIndex > lastIndex) return resolve();\n            else callback(array[currIndex]).then(()=>{\n                functionToIterateWith(currIndex + 1);\n            }).catch((err)=>reject(err));\n        };\n        functionToIterateWith(startIndex);\n    });\n}\n// Set cokies in temp file and load\nasync function $58ab8aa5dab4a8db$var$setCookiesAndSave(page) {\n    const previousSession = $bD1u6$fs.existsSync(\"./cokiesSaved.json\");\n    if (previousSession) {\n        // If file exist load the cookies\n        const cookiesString = $bD1u6$fs.readFileSync(\"./cokiesSaved.json\");\n        const parsedCookies = JSON.parse(cookiesString);\n        if (parsedCookies.length !== 0) {\n            for (let cookie of parsedCookies)await page.setCookie(cookie);\n            console.log(\"Session has been loaded in the browser\");\n        }\n    } else {\n        // Save Session Cookies\n        const cookiesObject = await page.cookies();\n        // Write cookies to temp file to be used in other profile pages\n        $bD1u6$fs.writeFile(\"cokiesSaved.json\", JSON.stringify(cookiesObject), function(err) {\n            if (err) console.log(\"The file could not be written.\", err);\n            console.log(\"Session has been successfully saved\");\n        });\n    }\n}\n// Set Cokies in Puppeter\nasync function $58ab8aa5dab4a8db$var$setCookies(page, cookiePath) {\n    let cookies = [];\n    if ($bD1u6$fs.existsSync(cookiePath)) cookies = JSON.parse($bD1u6$fs.readFileSync(cookiePath));\n    cookies = cookies.map((cookie)=>{\n        cookie.url = `https://${cookie.domain}:3002`;\n        delete cookie.domain;\n        return cookie;\n    });\n    return Promise.all(cookies.map(async (cookie)=>{\n        await page.setCookie(cookie);\n    }));\n}\nasync function $58ab8aa5dab4a8db$var$listAllFilesInDir(dir, fileList = []) {\n    const files = await $bD1u6$fs.promises.readdir(dir);\n    try {\n        for (const file of files){\n            const stat = await $bD1u6$fs.promises.stat($bD1u6$path.join(dir, file));\n            if (stat.isDirectory()) fileList = await $58ab8aa5dab4a8db$var$listAllFilesInDir($bD1u6$path.join(dir, file), fileList);\n            else fileList.push($bD1u6$path.join(dir, file));\n        }\n    } catch (error) {\n        console.log(\"\\uD83D\\uDE80 ~ file: utils.js ~ line 141 ~ listAllFilesInDir ~ error\", error);\n    }\n    return fileList;\n}\n// get a full list off directories\nfunction $58ab8aa5dab4a8db$var$getDirectories(path) {\n    return $bD1u6$fs.readdirSync(path).filter(function(file) {\n        return $bD1u6$fs.statSync(path + \"/\" + file).isDirectory();\n    });\n}\n// Compare dates\n// type de = decreasing / in = increase\nfunction $58ab8aa5dab4a8db$var$dateCompare(a, b, type = \"de\") {\n    const d1 = $bD1u6$moment(a, \"DD/MM/YYYY\");\n    const d2 = $bD1u6$moment(b, \"DD/MM/YYYY\");\n    if (d1.isAfter(d2)) return type === \"in\" ? 1 : -1;\n    else if (d1.isBefore(d2)) return type === \"in\" ? -1 : 1;\n    return 0;\n}\nfunction $58ab8aa5dab4a8db$var$readAllJsonFiles(dir) {\n    return $bD1u6$fs.readdirSync(dir).filter((name)=>$bD1u6$path.extname(name) === \".json\").map((name)=>require($bD1u6$path.join(dir, name)));\n}\n$58ab8aa5dab4a8db$exports = {\n    emptyDir: $58ab8aa5dab4a8db$var$emptyDir,\n    forEachSync: $58ab8aa5dab4a8db$var$forEachSync,\n    setCookies: $58ab8aa5dab4a8db$var$setCookies,\n    listAllFilesInDir: $58ab8aa5dab4a8db$var$listAllFilesInDir,\n    setCookiesAndSave: $58ab8aa5dab4a8db$var$setCookiesAndSave,\n    removeDir: $58ab8aa5dab4a8db$var$removeDir,\n    deleteFolderRecursive: $58ab8aa5dab4a8db$var$deleteFolderRecursive,\n    getDirectories: $58ab8aa5dab4a8db$var$getDirectories,\n    dateCompare: $58ab8aa5dab4a8db$var$dateCompare,\n    readAllJsonFiles: $58ab8aa5dab4a8db$var$readAllJsonFiles\n};\n\n\nvar $ee1bd6e63bb547d0$require$emptyDir = $58ab8aa5dab4a8db$exports.emptyDir;\nvar $ee1bd6e63bb547d0$require$forEachSync = $58ab8aa5dab4a8db$exports.forEachSync;\nvar $ee1bd6e63bb547d0$require$deleteFolderRecursive = $58ab8aa5dab4a8db$exports.deleteFolderRecursive;\nvar $ee1bd6e63bb547d0$require$readAllJsonFiles = $58ab8aa5dab4a8db$exports.readAllJsonFiles;\n\nvar $ee1bd6e63bb547d0$require$formatScenario = $92f5201932e10347$exports.formatScenario;\nvar $7240387fe62c4b7e$exports = {};\n\nvar $7240387fe62c4b7e$var$$parcel$__dirname = $bD1u6$path.resolve(__dirname, \"../lib\");\n\n\nvar $7240387fe62c4b7e$require$getDirectories = $58ab8aa5dab4a8db$exports.getDirectories;\nvar $7240387fe62c4b7e$require$deleteFolderRecursive = $58ab8aa5dab4a8db$exports.deleteFolderRecursive;\nclass $7240387fe62c4b7e$var$FolderCleaner {\n    constructor(){\n        this.basePath = $bD1u6$path.resolve($7240387fe62c4b7e$var$$parcel$__dirname, \"..\");\n    }\n    _getDateFromFolderName(folderName) {\n        const parts = folderName.split(\"/\").pop().split(\"_\");\n        const [day, month, year] = parts.map(Number); // Converts to numbers\n        return new Date(year, month - 1, day);\n    }\n    _filterFoldersByDate(folders) {\n        const dateFormatRegex = /\\d{1,2}_\\d{1,2}_\\d{4}/;\n        return folders.filter((folder)=>dateFormatRegex.test(folder.split(\"/\").pop()));\n    }\n    _sortFoldersByDescendingDate(folders) {\n        return folders.sort((a, b)=>this._getDateFromFolderName(b) - this._getDateFromFolderName(a));\n    }\n    async _eraseFolders(foldersToDelete) {\n        console.log(`\\u{1F680} ~ Voc\\xea vai deletar ${foldersToDelete.length} pastas`);\n        foldersToDelete.forEach((folder)=>{\n            const targetPath = $bD1u6$path.resolve(this.basePath, folder);\n            console.log(\"\\uD83D\\uDE80 ~ Apagando pasta de teste antiga: \", targetPath);\n            $7240387fe62c4b7e$require$deleteFolderRecursive(targetPath);\n        });\n    }\n    async eraseUnusedFolders() {\n        let testFolders;\n        try {\n            testFolders = await $7240387fe62c4b7e$require$getDirectories(this.basePath);\n            testFolders = this._filterFoldersByDate(testFolders);\n            testFolders = this._sortFoldersByDescendingDate(testFolders);\n            if (testFolders.length > 3) testFolders = testFolders.slice(3); // Keeps only the 3 most recent folders\n            else testFolders = [];\n            if (!testFolders.length) {\n                console.log(\"\\uD83D\\uDE80 ~ Sem pastas para deletar\");\n                return;\n            }\n            await this._eraseFolders(testFolders);\n        } catch (error) {\n            console.error(\"Erro ao apagar pastas n\\xe3o utilizadas:\", error);\n        }\n    }\n    async run() {\n        console.log(\"\\uD83D\\uDE80 ~ Iniciando dele\\xe7\\xe3o de pastas de testes antigas\");\n        await this.eraseUnusedFolders();\n        console.log(\"\\uD83D\\uDE80 ~ Finalizando dele\\xe7\\xe3o de pastas de testes antigas\");\n    }\n}\nconst $7240387fe62c4b7e$var$folderCleaner = new $7240387fe62c4b7e$var$FolderCleaner();\n$7240387fe62c4b7e$exports = {\n    eraseUnusedFolders: $7240387fe62c4b7e$var$folderCleaner.eraseUnusedFolders.bind($7240387fe62c4b7e$var$folderCleaner),\n    runEraseUnusedFolders: $7240387fe62c4b7e$var$folderCleaner.run.bind($7240387fe62c4b7e$var$folderCleaner),\n    folderCleaner: $7240387fe62c4b7e$var$folderCleaner\n};\n\n\nvar $ee1bd6e63bb547d0$require$runEraseUnusedFolders = $7240387fe62c4b7e$exports.runEraseUnusedFolders;\nclass $ee1bd6e63bb547d0$var$TestRunner {\n    constructor(){\n        this.urlCMD = process.env.URL || \"http://localhost:3001/\";\n        this.scenarios = $ee1bd6e63bb547d0$require$scenariosConfig(this.urlCMD);\n        this.scenarioConfigFinal = [];\n    }\n    async initialize() {\n        const userData = $bD1u6$path.resolve($ee1bd6e63bb547d0$var$$parcel$__dirname, \"..\", \"user_data/\");\n        await $ee1bd6e63bb547d0$require$emptyDir($bD1u6$path.resolve($ee1bd6e63bb547d0$var$$parcel$__dirname, \"..\", \"test/\"), \"Teste\");\n        await $ee1bd6e63bb547d0$require$deleteFolderRecursive(userData);\n        console.log(`>>> Temos ao total ${this.scenarios.length * 3} scenarios de teste ao total, sendo ${this.scenarios.length} de cada breakpoint. `);\n    }\n    async executeTests(viewPorts, scenarios) {\n        await $ee1bd6e63bb547d0$require$forEachSync(viewPorts, async (vp)=>{\n            await $ee1bd6e63bb547d0$require$forEachSync(scenarios, async (scenario)=>{\n                const item = await $ee1bd6e63bb547d0$require$formatScenario(scenario, vp);\n                this.scenarioConfigFinal.push(item);\n                await $ee1bd6e63bb547d0$require$logInitTest(scenario, vp, \"Rodando\");\n                await $505398d2bbe3bd6c$exports(scenario, vp).catch((error)=>{\n                    console.log(error);\n                });\n                await $ee1bd6e63bb547d0$require$logFinal(scenario, vp);\n            });\n        });\n    }\n    async reportResults() {\n        const dirImageTest = $bD1u6$path.resolve($ee1bd6e63bb547d0$var$$parcel$__dirname, `${this.scenarioConfigFinal[0].today.split(\"/\")[0]}`);\n        await $ad2633f7f5221f8f$exports.generate($ee1bd6e63bb547d0$require$readAllJsonFiles(dirImageTest));\n    }\n    async cleanup() {\n        await $ee1bd6e63bb547d0$require$runEraseUnusedFolders();\n    }\n    async run() {\n        await this.initialize();\n        await this.executeTests($25e3e73fea0fcd75$exports, this.scenarios);\n        await this.reportResults();\n        await this.cleanup();\n    }\n}\nconst $ee1bd6e63bb547d0$var$testRunner = new $ee1bd6e63bb547d0$var$TestRunner();\n$ee1bd6e63bb547d0$var$testRunner.run().catch((err)=>console.log(\"Erro ao executar testes\", err));\n\n\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nconst path = require('path');\nconst makeReporter = require('./lib/makeReporter');\nconst puppeterInit = require('./lib/puppeterConfig');\nconst { scenariosConfig } = require('./lib/config/scenariosConfig');\nconst viewPort = require('./lib/config/viewport.json');\nconst { logFinal, logInitTest } = require('./lib/helpers/logger');\nconst {\n  emptyDir,\n  forEachSync,\n  deleteFolderRecursive,\n  readAllJsonFiles,\n} = require('./lib/helpers/utils');\nconst { formatScenario } = require('./lib/puppeterConfigFormat');\nconst { runEraseUnusedFolders } = require('./lib/eraseUnusedFolders');\n\nclass TestRunner {\n  constructor() {\n    this.urlCMD = process.env.URL || 'http://localhost:3001/';\n    this.scenarios = scenariosConfig(this.urlCMD);\n    this.scenarioConfigFinal = [];\n  }\n\n  async initialize() {\n    const userData = path.resolve(__dirname, '..', 'user_data/');\n    await emptyDir(path.resolve(__dirname, '..', 'test/'), 'Teste');\n    await deleteFolderRecursive(userData);\n    console.log(\n      `>>> Temos ao total ${this.scenarios.length * 3} scenarios de teste ao total, sendo ${this.scenarios.length} de cada breakpoint. `\n    );\n  }\n\n  async executeTests(viewPorts, scenarios) {\n    await forEachSync(viewPorts, async (vp) => {\n      await forEachSync(scenarios, async (scenario) => {\n        const item = await formatScenario(scenario, vp);\n        this.scenarioConfigFinal.push(item);\n        await logInitTest(scenario, vp, 'Rodando');\n        await puppeterInit(scenario, vp).catch((error) => {\n          console.log(error);\n        });\n        await logFinal(scenario, vp);\n      });\n    });\n  }\n\n  async reportResults() {\n    const dirImageTest = path.resolve(\n      __dirname,\n      `${this.scenarioConfigFinal[0].today.split('/')[0]}`\n    );\n\n    await makeReporter.generate(readAllJsonFiles(dirImageTest));\n  }\n\n  async cleanup() {\n    await runEraseUnusedFolders();\n  }\n\n  async run() {\n    await this.initialize();\n    await this.executeTests(viewPort, this.scenarios);\n    await this.reportResults();\n    await this.cleanup();\n  }\n}\n\nconst testRunner = new TestRunner();\ntestRunner.run().catch((err) => console.log('Erro ao executar testes', err));\n","'use strict';\n\nconst fs = require('fs').promises;\nconst path = require('path');\nconst createHTML = require('create-html');\n\nclass ReportGenerator {\n  constructor() {\n    this.IMAGE_BASE_PATH = '../';\n    this.REFERENCE_IMAGE_PATH = `${this.IMAGE_BASE_PATH}reference/`;\n    this.REPORTER_PATH = path.resolve(__dirname, '..', 'reporter/');\n  }\n\n  getImagePath(type, imageFilePng, today, compatibility) {\n    switch (type) {\n      case 'reference':\n        return `${this.REFERENCE_IMAGE_PATH}${imageFilePng}`;\n      case 'test':\n        return `${this.IMAGE_BASE_PATH}${today}`;\n      case 'result':\n        if (compatibility) {\n          return `${this.IMAGE_BASE_PATH}${today.split('.')[0]}-diff.png`;\n        }\n        return '';\n      default:\n        return '';\n    }\n  }\n\n  createCard(\n    {\n      viewPort,\n      scenarioLabel,\n      difference,\n      compatibility,\n      imageFilePng,\n      today,\n      pageInitial,\n      redirectToUrl,\n    },\n    i\n  ) {\n    const createCardContentColumn = (type) => {\n      const imagePath = this.getImagePath(\n        type,\n        imageFilePng,\n        today,\n        compatibility\n      );\n      return `\n                <div class=\"card-content-column ${type}\">\n                    <div class=\"card-content-column-label\">${type.charAt(0).toUpperCase() + type.slice(1)}</div>\n                    <div class=\"card-content-column-img\">\n                        ${imagePath ? `<img src=\"${imagePath}\" alt=\"\">` : ''}\n                    </div>\n                </div>`.trim();\n    };\n\n    const createModal = () =>\n      `\n            <div id=\"modal-${i}\" class=\"hide\">\n                <div class=\"close\"></div>\n                <div class=\"container\">\n                    <div class=\"modal content\">\n                        <img src=\"${this.IMAGE_BASE_PATH}${today}\" alt=\"\">\n                        <img src=\"${this.REFERENCE_IMAGE_PATH}${imageFilePng}\" alt=\"\">\n                    </div>\n                </div>\n            </div>`.trim();\n\n    return `\n            <div class=\"card\" data-scenario=\"${viewPort}\" data-label=\"${scenarioLabel}\" data-difference=\"${difference || ''}\" data-compatibility=\"${compatibility || ''}\">\n                <div class=\"card-label\">\n                    <span class=\"page\">Página: ${scenarioLabel}</span> |\n                    <span class=\"compatibility\">${compatibility ? `Taxa de Compatibilidade:${compatibility}%` : 'Imagem com tamanhos diferentes'}</span> |\n                    <span class=\"pixels\">${difference ? `${difference} pixels diferentes` : ''}</span> |\n                    <span>URL: <a href=\"${redirectToUrl ? redirectToUrl : pageInitial}\" target=\"_blank\">${redirectToUrl ? redirectToUrl : pageInitial}</a></span>\n                </div>\n                <div class=\"card-content\">\n                    ${['reference', 'test', 'result'].map(createCardContentColumn).join('')}\n                </div>\n                <div class=\"card-filename\">filename: ${imageFilePng}</div>\n                ${createModal()}\n            </div>`.trim();\n  }\n\n  createHeaderButtons(items) {\n    const viewPorts = new Set(items.map((item) => item.viewPort));\n    return Array.from(viewPorts)\n      .map((viewPort) => {\n        const label = viewPort.charAt(0).toUpperCase() + viewPort.slice(1);\n        return `<button class=\"${viewPort}\">${label}</button>`;\n      })\n      .join(' ');\n  }\n\n  createHeader(items) {\n    const viewPorts = new Set(items.map((item) => item.viewPort));\n    const buttons = Array.from(viewPorts)\n      .map((viewPort) => {\n        const label = viewPort.charAt(0).toUpperCase() + viewPort.slice(1);\n        return `<button class=\"${viewPort}\">${label}</button>`;\n      })\n      .join(' ');\n\n    return `\n        <div class=\"header-title\">Interface report</div>\n        <div class=\"header-container-search\">\n          <div class=\"header-container-search-buttons\">\n            ${buttons}\n            <button class=\"passed\">Aprovados</button>\n            <button class=\"reproved\">Reprovados</button>\n            <button class=\"sizes\">Falhas</button>\n            <button class=\"all\">Todos</button>\n          </div>\n          <div class=\"header-container-search-input\">\n            <input type=\"text\" placeholder=\"Insira sua busca aqui ...\"/>\n          </div>\n        </div>`.trim();\n  }\n\n  async generate(items) {\n    const reportFilePath = `${this.REPORTER_PATH}/index.html`;\n    const html = createHTML({\n      title: 'Relatório de Interface',\n      script: 'script.js',\n      css: 'style.css',\n      lang: 'pt-br',\n      head: `<meta charset=\"utf-8\">\n                 <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n                 <meta name=\"description\" content=\"\">\n                 <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n                 <script src=\"https://unpkg.com/image-compare-viewer/dist/image-compare-viewer.min.js\"></script>`,\n      body: `<div id=\"root\"><div class=\"container\">${this.createHeader(items)}${items.map(this.createCard.bind(this)).join('')}</div></div>`,\n      favicon: 'favicon.png',\n    });\n    try {\n      await fs.writeFile(reportFilePath, html);\n      console.log('\\nPágina de relatório criada com sucesso!');\n    } catch (error) {\n      console.error('\\nErro ao criar relatório de teste:', error);\n    }\n  }\n}\n\nconst makeReporter = new ReportGenerator();\nmodule.exports = makeReporter;\n","'use strict';\n\nconst path = require('path');\nconst puppeteer = require('puppeteer');\nconst mathImage = require('./mathImages');\nconst { formatScenario } = require('./puppeterConfigFormat');\nconst yargs = require('yargs/yargs');\nconst { argv } = yargs(process.argv.slice(2));\n\nclass PuppeteerHandler {\n  constructor(scenario, viewPort) {\n    this.scenario = scenario;\n    this.viewPort = viewPort;\n    this.isHeadless = argv.headless !== 'false';\n  }\n\n  async initializePage(browser) {\n    const page = await browser.newPage();\n    await page.setUserAgent(\n      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36'\n    );\n    await page.setViewport({\n      width: this.viewPort.width,\n      height: this.viewPort.height,\n      deviceScaleFactor: 1,\n    });\n    return page;\n  }\n\n  async executePageScript(page) {\n    if (this.scenario.pageScript) {\n      const pageScriptInit = require(this.scenario.pageScript);\n      await pageScriptInit(page, this.scenario, this.browser, this.viewPort);\n    } else {\n      await this.navigateToPage(page);\n    }\n  }\n\n  async navigateToPage(page) {\n    const url = this.scenario.pageInitial || this.scenario.url;\n    await page.goto(url, { waitUntil: 'networkidle0' });\n    await page.waitForSelector(this.scenario.targetElementToWait);\n  }\n\n  async takeScreenshot(page) {\n    if (this.scenario.fullPage) {\n      await page.screenshot({\n        path: path.resolve(__dirname, '..', this.scenario.today),\n        type: 'png',\n        fullPage: true,\n      });\n    } else {\n      const element = this.scenario.target\n        ? await page.$(this.scenario.target)\n        : page;\n      const enableFullPage =\n        this.scenario.breakPointFullpage &&\n        this.scenario.breakPointFullpage.includes(this.viewPort);\n      await element.screenshot({\n        path: path.resolve(__dirname, '..', this.scenario.today),\n        type: 'png',\n        fullPage: enableFullPage,\n      });\n    }\n  }\n\n  async run() {\n    this.scenario = await formatScenario(this.scenario, this.viewPort);\n    this.browser = await puppeteer.launch({\n      headless: this.isHeadless,\n      userDataDir: argv.userDataDir || './user_data',\n      args: [\n        '--proxy-server=\"direct://\"',\n        '--proxy-bypass-list=*',\n        '--disable-setuid-sandbox',\n        '--no-sandbox',\n        '--ignore-certificate-errors',\n        '--enable-features=NetworkService',\n        '--disable-dev-shm-usage',\n      ],\n    });\n    const page = await this.initializePage(this.browser);\n    try {\n      await this.executePageScript(page);\n      await this.takeScreenshot(page);\n      if (this.scenario.type !== 'reference') {\n        await mathImage(this.scenario);\n      }\n    } catch (error) {\n      console.error(\n        `Error on page ${this.scenario.pageInitial || this.scenario.url}:\\n${error}`\n      );\n    } finally {\n      await page.close();\n      await this.browser.close();\n    }\n    return this.scenario;\n  }\n}\n\nmodule.exports = async (scenario, viewPort) => {\n  const handler = new PuppeteerHandler(scenario, viewPort);\n  return await handler.run();\n};\n","'use strict';\n\nconst fs = require('fs');\nconst util = require('util');\nconst { PNG } = require('pngjs');\nconst pixelmatch = require('pixelmatch');\nconst path = require('path');\nconst sharp = require('sharp');\n\nconst writeFileAsync = util.promisify(fs.writeFile);\nconst readFileAsync = util.promisify(fs.readFile);\n\nclass ImageComparator {\n  constructor(scenario) {\n    this.referenceFilePath = this._resolvePath('reference', scenario.imageFilePng);\n    this.testFilePath = this._resolvePath(scenario.today);\n    this.diffFilePath = this._resolvePath(scenario.today.split('/')[0], `${scenario.imageFilePng.split('.')[0]}-diff.png`);\n    this.reporterLocation = this._resolvePath(scenario.today.split('/')[0], `${scenario.imageFilePng.split('.')[0]}.json`);\n    this.scenario = scenario;\n  }\n\n  _resolvePath(...paths) {\n    return path.resolve(__dirname, '..', ...paths);\n  }\n\n  async _resizeImage(imagePath, newHeight) {\n    const output = `${imagePath}-resized.png`;\n    try {\n      const image = await sharp(imagePath);\n      const metadata = await image.metadata();\n      const difference = newHeight - metadata.height;\n\n      await image\n        .extend({\n          top: 0,\n          bottom: difference,\n          left: 0,\n          right: 0,\n          background: { r: 0, g: 0, b: 0, alpha: 1 },\n        })\n        .toFile(output);\n      console.log('Imagem redimensionada salva em:', output);\n      return output;\n    } catch (error) {\n      console.error('Erro ao redimensionar imagem:', error);\n      throw error;\n    }\n  }\n\n  async _generateReport(difference, compatibility) {\n    const reportData = {\n      ...this.scenario,\n      difference,\n      compatibility: compatibility.toFixed(2),\n    };\n    try {\n      await writeFileAsync(this.reporterLocation, JSON.stringify(reportData));\n    } catch (error) {\n      console.error('Erro ao gerar relatório JSON:', error);\n      throw error;\n    }\n  }\n\n  async _saveTestImage(diff) {\n    try {\n      await writeFileAsync(this.diffFilePath, PNG.sync.write(diff));\n    } catch (error) {\n      console.error('Erro ao salvar imagem de diferença:', error);\n      throw error;\n    }\n  }\n\n  async _compareImages(referenceImage, testImage) {\n    const { width, height } = referenceImage;\n    const diff = new PNG({ width, height });\n    const differentPixels = pixelmatch(referenceImage.data, testImage.data, diff.data, width, height, { threshold: 0.1 });\n    const compatibility = 100 - (differentPixels * 100) / (width * height);\n    await this._generateReport(differentPixels, compatibility);\n    await this._saveTestImage(diff);\n  }\n\n  async compareAndSaveImagesAndGenerateReports() {\n    let referenceImage = PNG.sync.read(await readFileAsync(this.referenceFilePath));\n    let testImage = PNG.sync.read(await readFileAsync(this.testFilePath));\n\n    const referenceHeight = referenceImage.height;\n    const testHeight = testImage.height;\n    const heightDifference = Math.abs(referenceHeight - testHeight);\n    \n    if (heightDifference > 0) {\n      if (testHeight < referenceHeight) {\n        console.log(`Imagem de teste é menor que a imagem de referência, redimensionando imagem de teste...`);\n        const resizedImagePath = await this._resizeImage(this.testFilePath, heightDifference);\n        testImage = PNG.sync.read(await readFileAsync(resizedImagePath)); // Usa a imagem redimensionada para comparação\n      } else {\n        console.log(`Imagem de referência é menor que a imagem de teste, redimensionando imagem de referência...`);\n        const resizedImagePath = await this._resizeImage(this.referenceFilePath, heightDifference);\n        referenceImage = PNG.sync.read(await readFileAsync(resizedImagePath)); // Usa a imagem redimensionada para comparação\n      }\n    }\n  \n    await this._compareImages(referenceImage, testImage);\n  }\n}\n\nmodule.exports = async (scenario) => {\n  const comparator = new ImageComparator(scenario);\n  await comparator.compareAndSaveImagesAndGenerateReports();\n};\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nclass ScenarioFormatter {\n  constructor(scenario, viewPort) {\n    this.scenario = scenario;\n    this.viewPort = viewPort;\n  }\n\n  static formatName(viewPort, label) {\n    return `${viewPort.label.toUpperCase()}-${label.replace(/[^A-Z0-9]/gi, '_')}`;\n  }\n\n  existsInPath(referencePathFolder, referenceImage) {\n    return fs.existsSync(\n      path.resolve(\n        __dirname,\n        '..',\n        referencePathFolder.split('/')[1],\n        referenceImage\n      )\n    );\n  }\n\n  async getFolderPath(referencePathFolder, referenceImage) {\n    const date = new Date();\n    const folderName = this.existsInPath(referencePathFolder, referenceImage)\n      ? `${date.getDate()}_${date.getMonth() + 1}_${date.getFullYear()}`\n      : 'reference';\n\n    if (!fs.existsSync(path.resolve(__dirname, '..', folderName))) {\n      fs.mkdirSync(path.resolve(__dirname, '..', folderName));\n    }\n\n    return {\n      folderName: folderName,\n      type: folderName === 'reference' ? 'reference' : 'test',\n    };\n  }\n\n  async formatComplete() {\n    const formattedName = ScenarioFormatter.formatName(\n      this.viewPort,\n      this.scenario.label\n    );\n    const imagePath = `./reference/${formattedName}.png`;\n\n    const { folderName, type } = await this.getFolderPath(\n      './reference',\n      `${formattedName}.png`\n    );\n\n    return {\n      ...this.scenario,\n      viewPort: this.viewPort.label,\n      scenarioLabel: `${this.scenario.label} - ${this.viewPort.label}`,\n      imageFileName: formattedName,\n      imageFilePng: `${formattedName}.png`,\n      today: path.join(folderName, `${formattedName}.png`),\n      test: path.join('test', `${formattedName}.png`),\n      type: type,\n    };\n  }\n}\n\nmodule.exports = {\n  formatScenario: async (scenario, viewPort) => {\n    const formatter = new ScenarioFormatter(scenario, viewPort);\n    return await formatter.formatComplete();\n  },\n};\n","const scenariosConfig = (urlBase) => {\n  console.log('> A url pros prints é:', urlBase);\n  return [\n    {\n      label: 'Google Home',\n      pageInitial: urlBase,\n      targetElementToWait: 'form[action=\"/search\"]',\n      fullPage: true,\n    },\n    {\n      label: 'Google Search Results for Tesla',\n      pageInitial: urlBase,\n      targetElementToWait: 'form[action=\"/search\"]',\n      fullPage: true,\n      pageScript: '../scripts/scenario/googleSearch.js', \n      searchQuery: 'Tesla', \n      targetElementToWaitAfterRedirect: '#search',\n    },\n  ];\n};\n\nmodule.exports = {\n  scenariosConfig,\n};\n","[\n  {\n    \"label\": \"desktop\",\n    \"width\": 1280,\n    \"height\": 1024\n  },\n  {\n    \"label\": \"tablet\",\n    \"width\": 1024,\n    \"height\": 768\n  },\n  {\n    \"label\": \"phone\",\n    \"width\": 320,\n    \"height\": 480\n  \n  }\n]\n","'use strict';\n\nclass Logger {\n  constructor() {\n    this.fullLine = '#'.repeat(105);\n    this.shortLine = '#'.repeat(97);\n  }\n\n  logWithFullLine(message) {\n    console.log(`${this.fullLine}\\n${message}\\n${this.fullLine}`);\n  }\n\n  logWithShortLine(message) {\n    console.log(`${this.shortLine}\\n${message}\\n${this.shortLine}`);\n  }\n\n  logInitTest(scenario, vp, type) {\n    const message = `##### Teste ${type} em: '${scenario.label}' no viewport: '${vp.label}' #####`;\n    this.logWithFullLine(message);\n  }\n\n  logFinal(scenario, vp) {\n    const message = `##### Teste Finalizado em: '${scenario.label}' no viewport: '${vp.label}' #####`;\n    this.logWithFullLine(message);\n  }\n\n  logLine() {\n    console.log(`\\n${this.shortLine}\\n`);\n  }\n\n  logLineFirst() {\n    console.log(`\\n${this.fullLine}`);\n  }\n\n  logLineLast() {\n    console.log(`${this.fullLine}\\n`);\n  }\n}\n\nconst logger = new Logger();\n\nmodule.exports = {\n  logInitTest: (scenario, vp, type) => logger.logInitTest(scenario, vp, type),\n  logLineFirst: () => logger.logLineFirst(),\n  logLineLast: () => logger.logLineLast(),\n  logLine: () => logger.logLine(),\n  logFinal: (scenario, vp) => logger.logFinal(scenario, vp),\n  logger,\n};\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst moment = require('moment');\n\nfunction deleteFolderRecursive(path) {\n  if (fs.existsSync(path)) {\n    fs.readdirSync(path).forEach(function (file, index) {\n      var curPath = path + '/' + file;\n      if (fs.lstatSync(curPath).isDirectory()) {\n        // recurse\n        deleteFolderRecursive(curPath);\n      } else {\n        // delete file\n        fs.unlinkSync(curPath);\n      }\n    });\n    fs.rmdirSync(path);\n  }\n}\n// Delete Folder\nasync function removeDir(dir_path) {\n  if (fs.existsSync(dir_path)) {\n    fs.readdirSync(dir_path).forEach(function (entry) {\n      var entry_path = path.join(dir_path, entry);\n      if (fs.lstatSync(entry_path).isDirectory()) {\n        removeDir(entry_path);\n      } else {\n        fs.unlinkSync(entry_path);\n      }\n    });\n    fs.rmdirSync(dir_path);\n  }\n}\n\n// Delete Files in folder\nasync function emptyDir(directory, folderName) {\n  if (!fs.existsSync(`${directory}`)) {\n    console.log(`>Pasta ${directory} não existe, criando a pasta.`);\n    await fs.mkdirSync(`${directory}`);\n  }\n  console.log(`>> Apagando arquivos de ${folderName} antigos.`);\n  fs.readdir(directory, (err, files) => {\n    if (err) {\n      console.log(err);\n    }\n\n    for (const file of files) {\n      fs.unlink(path.join(directory, file), (err) => {\n        if (err) {\n          console.log(err);\n        }\n      });\n    }\n  });\n}\n\n// ForEach Synchronous\nfunction forEachSync(array, callback) {\n  let lastIndex = array.length - 1;\n  let startIndex = 0;\n\n  return new Promise((resolve, reject) => {\n    // Finish all\n    let functionToIterateWith = (currIndex) => {\n      if (currIndex > lastIndex) {\n        return resolve();\n      } else {\n        callback(array[currIndex])\n          .then(() => {\n            functionToIterateWith(currIndex + 1);\n          })\n          .catch((err) => reject(err));\n      }\n    };\n\n    functionToIterateWith(startIndex);\n  });\n}\n\n// Set cokies in temp file and load\nasync function setCookiesAndSave(page) {\n  const previousSession = fs.existsSync('./cokiesSaved.json');\n  if (previousSession) {\n    // If file exist load the cookies\n    const cookiesString = fs.readFileSync('./cokiesSaved.json');\n    const parsedCookies = JSON.parse(cookiesString);\n    if (parsedCookies.length !== 0) {\n      for (let cookie of parsedCookies) {\n        await page.setCookie(cookie);\n      }\n      console.log('Session has been loaded in the browser');\n    }\n  } else {\n    // Save Session Cookies\n    const cookiesObject = await page.cookies();\n    // Write cookies to temp file to be used in other profile pages\n    fs.writeFile(\n      'cokiesSaved.json',\n      JSON.stringify(cookiesObject),\n      function (err) {\n        if (err) {\n          console.log('The file could not be written.', err);\n        }\n        console.log('Session has been successfully saved');\n      }\n    );\n  }\n}\n\n// Set Cokies in Puppeter\nasync function setCookies(page, cookiePath) {\n  let cookies = [];\n\n  if (fs.existsSync(cookiePath)) {\n    cookies = JSON.parse(fs.readFileSync(cookiePath));\n  }\n\n  cookies = cookies.map((cookie) => {\n    cookie.url = `https://${cookie.domain}:3002`;\n    delete cookie.domain;\n    return cookie;\n  });\n\n  return Promise.all(\n    cookies.map(async (cookie) => {\n      await page.setCookie(cookie);\n    })\n  );\n}\n\nasync function listAllFilesInDir(dir, fileList = []) {\n  const files = await fs.promises.readdir(dir);\n\n  try {\n    for (const file of files) {\n      const stat = await fs.promises.stat(path.join(dir, file));\n      if (stat.isDirectory()) {\n        fileList = await listAllFilesInDir(path.join(dir, file), fileList);\n      } else {\n        fileList.push(path.join(dir, file));\n      }\n    }\n  } catch (error) {\n    console.log(\n      '🚀 ~ file: utils.js ~ line 141 ~ listAllFilesInDir ~ error',\n      error\n    );\n  }\n\n  return fileList;\n}\n\n// get a full list off directories\nfunction getDirectories(path) {\n  return fs.readdirSync(path).filter(function (file) {\n    return fs.statSync(path + '/' + file).isDirectory();\n  });\n}\n\n// Compare dates\n// type de = decreasing / in = increase\nfunction dateCompare(a, b, type = 'de') {\n  const d1 = moment(a, 'DD/MM/YYYY');\n  const d2 = moment(b, 'DD/MM/YYYY');\n  if (d1.isAfter(d2)) {\n    return type === 'in' ? 1 : -1;\n  } else if (d1.isBefore(d2)) {\n    return type === 'in' ? -1 : 1;\n  }\n  return 0;\n}\n\nfunction readAllJsonFiles(dir) {\n  return fs\n    .readdirSync(dir)\n    .filter((name) => path.extname(name) === '.json')\n    .map((name) => require(path.join(dir, name)));\n}\n\nmodule.exports = {\n  emptyDir,\n  forEachSync,\n  setCookies,\n  listAllFilesInDir,\n  setCookiesAndSave,\n  removeDir,\n  deleteFolderRecursive,\n  getDirectories,\n  dateCompare,\n  readAllJsonFiles,\n};\n","const path = require('path');\nconst { getDirectories, deleteFolderRecursive } = require('./helpers/utils');\n\nclass FolderCleaner {\n  constructor() {\n    this.basePath = path.resolve(__dirname, '..');\n  }\n\n  _getDateFromFolderName(folderName) {\n    const parts = folderName.split('/').pop().split('_');\n    const [day, month, year] = parts.map(Number); // Converts to numbers\n    return new Date(year, month - 1, day);\n  }\n\n  _filterFoldersByDate(folders) {\n    const dateFormatRegex = /\\d{1,2}_\\d{1,2}_\\d{4}/; \n    return folders.filter((folder) => dateFormatRegex.test(folder.split('/').pop()));\n  }\n\n  _sortFoldersByDescendingDate(folders) {\n    return folders.sort((a, b) => this._getDateFromFolderName(b) - this._getDateFromFolderName(a));\n  }\n\n  async _eraseFolders(foldersToDelete) {\n    console.log(`🚀 ~ Você vai deletar ${foldersToDelete.length} pastas`);\n    foldersToDelete.forEach((folder) => {\n      const targetPath = path.resolve(this.basePath, folder);\n      console.log('🚀 ~ Apagando pasta de teste antiga: ', targetPath);\n      deleteFolderRecursive(targetPath);\n    });\n  }\n\n  async eraseUnusedFolders() {\n    let testFolders;\n    try {\n      testFolders = await getDirectories(this.basePath);\n      testFolders = this._filterFoldersByDate(testFolders);\n      testFolders = this._sortFoldersByDescendingDate(testFolders);\n\n      if (testFolders.length > 3) {\n        testFolders = testFolders.slice(3); // Keeps only the 3 most recent folders\n      } else {\n        testFolders = [];\n      }\n\n      if (!testFolders.length) {\n        console.log('🚀 ~ Sem pastas para deletar');\n        return;\n      }\n\n      await this._eraseFolders(testFolders);\n    } catch (error) {\n      console.error('Erro ao apagar pastas não utilizadas:', error);\n    }\n  }\n\n  async run() {\n    console.log('🚀 ~ Iniciando deleção de pastas de testes antigas');\n    await this.eraseUnusedFolders();\n    console.log('🚀 ~ Finalizando deleção de pastas de testes antigas');\n  }\n}\n\nconst folderCleaner = new FolderCleaner();\n\nmodule.exports = {\n  eraseUnusedFolders: folderCleaner.eraseUnusedFolders.bind(folderCleaner),\n  runEraseUnusedFolders: folderCleaner.run.bind(folderCleaner),\n  folderCleaner\n};\n"],"names":["$bD1u6$path","require","$bD1u6$fs","$bD1u6$createhtml","$bD1u6$puppeteer","$bD1u6$yargsyargs","$bD1u6$util","$bD1u6$pngjs","$bD1u6$pixelmatch","$bD1u6$sharp","$bD1u6$moment","$ee1bd6e63bb547d0$var$$parcel$__dirname","resolve","__dirname","$ad2633f7f5221f8f$exports","$ad2633f7f5221f8f$var$$parcel$__dirname","$ad2633f7f5221f8f$require$fs","promises","constructor","IMAGE_BASE_PATH","REFERENCE_IMAGE_PATH","REPORTER_PATH","getImagePath","type","imageFilePng","today","compatibility","split","createCard","viewPort","scenarioLabel","difference","pageInitial","redirectToUrl","i","map","imagePath","charAt","toUpperCase","slice","trim","join","createHeaderButtons","items","Array","from","Set","item","label","createHeader","buttons","generate","reportFilePath","html","title","script","css","lang","head","body","bind","favicon","writeFile","console","log","error","$505398d2bbe3bd6c$exports","$505398d2bbe3bd6c$var$$parcel$__dirname","$308b4c8e5dd917ed$exports","$308b4c8e5dd917ed$var$$parcel$__dirname","$308b4c8e5dd917ed$require$PNG","PNG","$308b4c8e5dd917ed$var$writeFileAsync","promisify","$308b4c8e5dd917ed$var$readFileAsync","readFile","$308b4c8e5dd917ed$var$ImageComparator","scenario","referenceFilePath","_resolvePath","testFilePath","diffFilePath","reporterLocation","paths","_resizeImage","newHeight","output","image","metadata","height","extend","top","bottom","left","right","background","r","g","b","alpha","toFile","_generateReport","reportData","toFixed","JSON","stringify","_saveTestImage","diff","sync","write","_compareImages","referenceImage","testImage","width","differentPixels","data","threshold","compareAndSaveImagesAndGenerateReports","read","referenceHeight","testHeight","heightDifference","Math","abs","resizedImagePath","comparator","$92f5201932e10347$exports","$92f5201932e10347$var$$parcel$__dirname","$92f5201932e10347$var$ScenarioFormatter","formatName","replace","existsInPath","referencePathFolder","existsSync","getFolderPath","date","Date","folderName","getDate","getMonth","getFullYear","mkdirSync","formatComplete","formattedName","imageFileName","test","$505398d2bbe3bd6c$require$formatScenario","formatScenario","formatter","argv","$505398d2bbe3bd6c$var$argv","process","$505398d2bbe3bd6c$var$PuppeteerHandler","isHeadless","headless","initializePage","browser","page","newPage","setUserAgent","setViewport","deviceScaleFactor","executePageScript","pageScript","pageScriptInit","navigateToPage","url","goto","waitUntil","waitForSelector","targetElementToWait","takeScreenshot","fullPage","screenshot","path","element","target","$","enableFullPage","breakPointFullpage","includes","run","launch","userDataDir","args","close","handler","$ee1bd6e63bb547d0$require$scenariosConfig","urlBase","searchQuery","targetElementToWaitAfterRedirect","$25e3e73fea0fcd75$exports","parse","$b1e669000de16015$exports","$b1e669000de16015$var$logger","fullLine","repeat","shortLine","logWithFullLine","message","logWithShortLine","logInitTest","vp","logFinal","logLine","logLineFirst","logLineLast","$ee1bd6e63bb547d0$require$logFinal","logger","$ee1bd6e63bb547d0$require$logInitTest","$58ab8aa5dab4a8db$exports","$58ab8aa5dab4a8db$var$removeDir","dir_path","readdirSync","forEach","entry","entry_path","lstatSync","isDirectory","unlinkSync","rmdirSync","$58ab8aa5dab4a8db$var$listAllFilesInDir","dir","fileList","files","readdir","file","stat","push","$ee1bd6e63bb547d0$require$emptyDir","emptyDir","directory","err","unlink","forEachSync","array","callback","lastIndex","length","Promise","reject","functionToIterateWith","currIndex","then","catch","setCookies","cookiePath","cookies","readFileSync","all","cookie","domain","setCookie","listAllFilesInDir","setCookiesAndSave","parsedCookies","cookiesObject","removeDir","deleteFolderRecursive","$58ab8aa5dab4a8db$var$deleteFolderRecursive","index","curPath","getDirectories","filter","statSync","dateCompare","a","d1","d2","isAfter","isBefore","readAllJsonFiles","name","extname","$ee1bd6e63bb547d0$require$forEachSync","$ee1bd6e63bb547d0$require$deleteFolderRecursive","$ee1bd6e63bb547d0$require$readAllJsonFiles","$ee1bd6e63bb547d0$require$formatScenario","$7240387fe62c4b7e$var$$parcel$__dirname","$7240387fe62c4b7e$require$getDirectories","$7240387fe62c4b7e$require$deleteFolderRecursive","$7240387fe62c4b7e$var$folderCleaner","basePath","_getDateFromFolderName","day","month","year","parts","pop","Number","_filterFoldersByDate","folders","dateFormatRegex","folder","_sortFoldersByDescendingDate","sort","_eraseFolders","foldersToDelete","targetPath","eraseUnusedFolders","testFolders","$ee1bd6e63bb547d0$require$runEraseUnusedFolders","$7240387fe62c4b7e$exports","runEraseUnusedFolders","folderCleaner","$ee1bd6e63bb547d0$var$testRunner","urlCMD","env","URL","scenarios","scenarioConfigFinal","initialize","userData","executeTests","viewPorts","reportResults","dirImageTest","cleanup"],"version":3,"file":"index.js.map","sourceRoot":"../"}
var e=require("path"),t=require("fs"),a=require("create-html"),i=require("puppeteer"),r=require("yargs/yargs"),s=require("util"),o=require("pngjs"),n=require("pixelmatch"),l=require("sharp"),c=require("moment"),d=e.resolve(__dirname,".."),h={},g=e.resolve(__dirname,"../lib"),u=t.promises;h=new class{constructor(){this.IMAGE_BASE_PATH="../",this.REFERENCE_IMAGE_PATH=`${this.IMAGE_BASE_PATH}reference/`,this.REPORTER_PATH=e.resolve(g,"..","reporter/")}getImagePath(e,t,a,i){switch(e){case"reference":return`${this.REFERENCE_IMAGE_PATH}${t}`;case"test":return`${this.IMAGE_BASE_PATH}${a}`;case"result":if(i)return`${this.IMAGE_BASE_PATH}${a.split(".")[0]}-diff.png`;return"";default:return""}}createCard({viewPort:e,scenarioLabel:t,difference:a,compatibility:i,imageFilePng:r,today:s,pageInitial:o,redirectToUrl:n},l){return`
            <div class="card" data-scenario="${e}" data-label="${t}" data-difference="${a||""}" data-compatibility="${i||""}">
                <div class="card-label">
                    <span class="page">P\xe1gina: ${t}</span> |
                    <span class="compatibility">${i?`Taxa de Compatibilidade:${i}%`:"Imagem com tamanhos diferentes"}</span> |
                    <span class="pixels">${a?`${a} pixels diferentes`:""}</span> |
                    <span>URL: <a href="${n||o}" target="_blank">${n||o}</a></span>
                </div>
                <div class="card-content">
                    ${["reference","test","result"].map(e=>{let t=this.getImagePath(e,r,s,i);return`
                <div class="card-content-column ${e}">
                    <div class="card-content-column-label">${e.charAt(0).toUpperCase()+e.slice(1)}</div>
                    <div class="card-content-column-img">
                        ${t?`<img src="${t}" alt="">`:""}
                    </div>
                </div>`.trim()}).join("")}
                </div>
                <div class="card-filename">filename: ${r}</div>
                ${`
            <div id="modal-${l}" class="hide">
                <div class="close"></div>
                <div class="container">
                    <div class="modal content">
                        <img src="${this.IMAGE_BASE_PATH}${s}" alt="">
                        <img src="${this.REFERENCE_IMAGE_PATH}${r}" alt="">
                    </div>
                </div>
            </div>`.trim()}
            </div>`.trim()}createHeaderButtons(e){return Array.from(new Set(e.map(e=>e.viewPort))).map(e=>{let t=e.charAt(0).toUpperCase()+e.slice(1);return`<button class="${e}">${t}</button>`}).join(" ")}createHeader(e){let t=Array.from(new Set(e.map(e=>e.viewPort))).map(e=>{let t=e.charAt(0).toUpperCase()+e.slice(1);return`<button class="${e}">${t}</button>`}).join(" ");return`
        <div class="header-title">Interface report</div>
        <div class="header-container-search">
          <div class="header-container-search-buttons">
            ${t}
            <button class="passed">Aprovados</button>
            <button class="reproved">Reprovados</button>
            <button class="sizes">Falhas</button>
            <button class="all">Todos</button>
          </div>
          <div class="header-container-search-input">
            <input type="text" placeholder="Insira sua busca aqui ..."/>
          </div>
        </div>`.trim()}async generate(e){let t=`${this.REPORTER_PATH}/index.html`,i=a({title:"Relatório de Interface",script:"script.js",css:"style.css",lang:"pt-br",head:`<meta charset="utf-8">
                 <meta http-equiv="X-UA-Compatible" content="IE=edge">
                 <meta name="description" content="">
                 <meta name="viewport" content="width=device-width, initial-scale=1">
                 <script src="https://unpkg.com/image-compare-viewer/dist/image-compare-viewer.min.js"></script>`,body:`<div id="root"><div class="container">${this.createHeader(e)}${e.map(this.createCard.bind(this)).join("")}</div></div>`,favicon:"favicon.png"});try{await u.writeFile(t,i),console.log("\nPágina de relatório criada com sucesso!")}catch(e){console.error("\nErro ao criar relatório de teste:",e)}}};var p={},m=e.resolve(__dirname,"../lib"),f={},v=e.resolve(__dirname,"../lib"),w=o.PNG;const y=s.promisify(t.writeFile),b=s.promisify(t.readFile);class ${constructor(e){this.referenceFilePath=this._resolvePath("reference",e.imageFilePng),this.testFilePath=this._resolvePath(e.today),this.diffFilePath=this._resolvePath(e.today.split("/")[0],`${e.imageFilePng.split(".")[0]}-diff.png`),this.reporterLocation=this._resolvePath(e.today.split("/")[0],`${e.imageFilePng.split(".")[0]}.json`),this.scenario=e}_resolvePath(...t){return e.resolve(v,"..",...t)}async _resizeImage(e,t){let a=`${e}-resized.png`;try{let i=await l(e),r=await i.metadata(),s=t-r.height;return await i.extend({top:0,bottom:s,left:0,right:0,background:{r:0,g:0,b:0,alpha:1}}).toFile(a),console.log("Imagem redimensionada salva em:",a),a}catch(e){throw console.error("Erro ao redimensionar imagem:",e),e}}async _generateReport(e,t){let a={...this.scenario,difference:e,compatibility:t.toFixed(2)};try{await y(this.reporterLocation,JSON.stringify(a))}catch(e){throw console.error("Erro ao gerar relatório JSON:",e),e}}async _saveTestImage(e){try{await y(this.diffFilePath,w.sync.write(e))}catch(e){throw console.error("Erro ao salvar imagem de diferença:",e),e}}async _compareImages(e,t){let{width:a,height:i}=e,r=new w({width:a,height:i}),s=n(e.data,t.data,r.data,a,i,{threshold:.1}),o=100-100*s/(a*i);await this._generateReport(s,o),await this._saveTestImage(r)}async compareAndSaveImagesAndGenerateReports(){let e=w.sync.read(await b(this.referenceFilePath)),t=w.sync.read(await b(this.testFilePath)),a=e.height,i=t.height,r=Math.abs(a-i);if(r>0){if(i<a){console.log(`Imagem de teste \xe9 menor que a imagem de refer\xeancia, redimensionando imagem de teste...`);let e=await this._resizeImage(this.testFilePath,r);t=w.sync.read(await b(e))}else{console.log(`Imagem de refer\xeancia \xe9 menor que a imagem de teste, redimensionando imagem de refer\xeancia...`);let t=await this._resizeImage(this.referenceFilePath,r);e=w.sync.read(await b(t))}}await this._compareImages(e,t)}}f=async e=>{let t=new $(e);await t.compareAndSaveImagesAndGenerateReports()};var P={},F=e.resolve(__dirname,"../lib");class S{constructor(e,t){this.scenario=e,this.viewPort=t}static formatName(e,t){return`${e.label.toUpperCase()}-${t.replace(/[^A-Z0-9]/gi,"_")}`}existsInPath(a,i){return t.existsSync(e.resolve(F,"..",a.split("/")[1],i))}async getFolderPath(a,i){let r=new Date,s=this.existsInPath(a,i)?`${r.getDate()}_${r.getMonth()+1}_${r.getFullYear()}`:"reference";return t.existsSync(e.resolve(F,"..",s))||t.mkdirSync(e.resolve(F,"..",s)),{folderName:s,type:"reference"===s?"reference":"test"}}async formatComplete(){let t=S.formatName(this.viewPort,this.scenario.label),{folderName:a,type:i}=await this.getFolderPath("./reference",`${t}.png`);return{...this.scenario,viewPort:this.viewPort.label,scenarioLabel:`${this.scenario.label} - ${this.viewPort.label}`,imageFileName:t,imageFilePng:`${t}.png`,today:e.join(a,`${t}.png`),test:e.join("test",`${t}.png`),type:i}}}var _=(P={formatScenario:async(e,t)=>{let a=new S(e,t);return await a.formatComplete()}}).formatScenario;const{argv:E}=r(process.argv.slice(2));class A{constructor(e,t){this.scenario=e,this.viewPort=t,this.isHeadless="false"!==E.headless}async initializePage(e){let t=await e.newPage();return await t.setUserAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36"),await t.setViewport({width:this.viewPort.width,height:this.viewPort.height,deviceScaleFactor:1}),t}async executePageScript(e){if(this.scenario.pageScript){let t=require(this.scenario.pageScript);await t(e,this.scenario,this.browser,this.viewPort)}else await this.navigateToPage(e)}async navigateToPage(e){let t=this.scenario.pageInitial||this.scenario.url;await e.goto(t,{waitUntil:"networkidle0"}),await e.waitForSelector(this.scenario.targetElementToWait)}async takeScreenshot(t){if(this.scenario.fullPage)await t.screenshot({path:e.resolve(m,"..",this.scenario.today),type:"png",fullPage:!0});else{let a=this.scenario.target?await t.$(this.scenario.target):t,i=this.scenario.breakPointFullpage&&this.scenario.breakPointFullpage.includes(this.viewPort);await a.screenshot({path:e.resolve(m,"..",this.scenario.today),type:"png",fullPage:i})}}async run(){this.scenario=await _(this.scenario,this.viewPort),this.browser=await i.launch({headless:this.isHeadless,userDataDir:E.userDataDir||"./user_data",args:['--proxy-server="direct://"',"--proxy-bypass-list=*","--disable-setuid-sandbox","--no-sandbox","--ignore-certificate-errors","--enable-features=NetworkService","--disable-dev-shm-usage"]});let e=await this.initializePage(this.browser);try{await this.executePageScript(e),await this.takeScreenshot(e),"reference"!==this.scenario.type&&await f(this.scenario)}catch(e){console.error(`Error on page ${this.scenario.pageInitial||this.scenario.url}:
${e}`)}finally{await e.close(),await this.browser.close()}return this.scenario}}p=async(e,t)=>{let a=new A(e,t);return await a.run()};var D=e=>(console.log("> A url pros prints é:",e),[{label:"Login",pageInitial:e,targetElementToWait:".logo-text-container",fullPage:!0},{label:"Home",pageInitial:`${e}/sign-in`,targetElementToWait:".MuiAvatar-root",fullPage:!0,pageScript:"../scripts/login.js",redirectToUrl:`${e}/home`,targetElementToWaitAfterRedirect:".breadcrumbs"},{label:"Home Aplicações",pageInitial:`${e}/sign-in`,targetElementToWait:".MuiAvatar-root",fullPage:!0,pageScript:"../scripts/login.js",redirectToUrl:`${e}/applications`,targetElementToWaitAfterRedirect:".breadcrumbs"},{label:"Home Library",pageInitial:`${e}/sign-in`,targetElementToWait:".MuiAvatar-root",fullPage:!0,pageScript:"../scripts/login.js",redirectToUrl:`${e}/library`,targetElementToWaitAfterRedirect:".breadcrumbs"},{label:"Home Mobile",pageInitial:`${e}/sign-in`,targetElementToWait:".MuiAvatar-root",fullPage:!0,pageScript:"../scripts/login.js",redirectToUrl:`${e}/mobile`,targetElementToWaitAfterRedirect:".breadcrumbs"}]),T={};T=JSON.parse('[{"label":"desktop","width":1280,"height":1024}]');var I={};const x=new class{constructor(){this.fullLine="#".repeat(105),this.shortLine="#".repeat(97)}logWithFullLine(e){console.log(`${this.fullLine}
${e}
${this.fullLine}`)}logWithShortLine(e){console.log(`${this.shortLine}
${e}
${this.shortLine}`)}logInitTest(e,t,a){let i=`##### Teste ${a} em: '${e.label}' no viewport: '${t.label}' #####`;this.logWithFullLine(i)}logFinal(e,t){let a=`##### Teste Finalizado em: '${e.label}' no viewport: '${t.label}' #####`;this.logWithFullLine(a)}logLine(){console.log(`
${this.shortLine}
`)}logLineFirst(){console.log(`
${this.fullLine}`)}logLineLast(){console.log(`${this.fullLine}
`)}};var L=(I={logInitTest:(e,t,a)=>x.logInitTest(e,t,a),logLineFirst:()=>x.logLineFirst(),logLineLast:()=>x.logLineLast(),logLine:()=>x.logLine(),logFinal:(e,t)=>x.logFinal(e,t),logger:x}).logFinal,R=I.logInitTest,k={};async function j(a){t.existsSync(a)&&(t.readdirSync(a).forEach(function(i){var r=e.join(a,i);t.lstatSync(r).isDirectory()?j(r):t.unlinkSync(r)}),t.rmdirSync(a))}async function C(a,i=[]){let r=await t.promises.readdir(a);try{for(let s of r)(await t.promises.stat(e.join(a,s))).isDirectory()?i=await C(e.join(a,s),i):i.push(e.join(a,s))}catch(e){console.log("\uD83D\uDE80 ~ file: utils.js ~ line 141 ~ listAllFilesInDir ~ error",e)}return i}var M=(k={emptyDir:async function(a,i){t.existsSync(`${a}`)||(console.log(`>Pasta ${a} n\xe3o existe, criando a pasta.`),await t.mkdirSync(`${a}`)),console.log(`>> Apagando arquivos de ${i} antigos.`),t.readdir(a,(i,r)=>{for(let s of(i&&console.log(i),r))t.unlink(e.join(a,s),e=>{e&&console.log(e)})})},forEachSync:function(e,t){let a=e.length-1;return new Promise((i,r)=>{let s=o=>{if(o>a)return i();t(e[o]).then(()=>{s(o+1)}).catch(e=>r(e))};s(0)})},setCookies:async function(e,a){let i=[];return t.existsSync(a)&&(i=JSON.parse(t.readFileSync(a))),Promise.all((i=i.map(e=>(e.url=`https://${e.domain}:3002`,delete e.domain,e))).map(async t=>{await e.setCookie(t)}))},listAllFilesInDir:C,setCookiesAndSave:async function(e){if(t.existsSync("./cokiesSaved.json")){let a=JSON.parse(t.readFileSync("./cokiesSaved.json"));if(0!==a.length){for(let t of a)await e.setCookie(t);console.log("Session has been loaded in the browser")}}else{let a=await e.cookies();t.writeFile("cokiesSaved.json",JSON.stringify(a),function(e){e&&console.log("The file could not be written.",e),console.log("Session has been successfully saved")})}},removeDir:j,deleteFolderRecursive:function e(a){t.existsSync(a)&&(t.readdirSync(a).forEach(function(i,r){var s=a+"/"+i;t.lstatSync(s).isDirectory()?e(s):t.unlinkSync(s)}),t.rmdirSync(a))},getDirectories:function(e){return t.readdirSync(e).filter(function(a){return t.statSync(e+"/"+a).isDirectory()})},dateCompare:function(e,t,a="de"){let i=c(e,"DD/MM/YYYY"),r=c(t,"DD/MM/YYYY");return i.isAfter(r)?"in"===a?1:-1:i.isBefore(r)?"in"===a?-1:1:0},readAllJsonFiles:function(a){return t.readdirSync(a).filter(t=>".json"===e.extname(t)).map(t=>require(e.join(a,t)))}}).emptyDir,N=k.forEachSync,H=k.deleteFolderRecursive,U=k.readAllJsonFiles,q=P.formatScenario,W=e.resolve(__dirname,"../lib"),z=k.getDirectories,G=k.deleteFolderRecursive;const B=new class{constructor(){this.basePath=e.resolve(W,"..")}_getDateFromFolderName(e){let[t,a,i]=e.split("/").pop().split("_").map(Number);return new Date(i,a-1,t)}_filterFoldersByDate(e){let t=/\d{1,2}_\d{1,2}_\d{4}/;return e.filter(e=>t.test(e.split("/").pop()))}_sortFoldersByDescendingDate(e){return e.sort((e,t)=>this._getDateFromFolderName(t)-this._getDateFromFolderName(e))}async _eraseFolders(t){console.log(`\u{1F680} ~ Voc\xea vai deletar ${t.length} pastas`),t.forEach(t=>{let a=e.resolve(this.basePath,t);console.log("\uD83D\uDE80 ~ Apagando pasta de teste antiga: ",a),G(a)})}async eraseUnusedFolders(){let e;try{if(e=await z(this.basePath),e=this._filterFoldersByDate(e),!(e=(e=this._sortFoldersByDescendingDate(e)).length>3?e.slice(3):[]).length){console.log("\uD83D\uDE80 ~ Sem pastas para deletar");return}await this._eraseFolders(e)}catch(e){console.error("Erro ao apagar pastas não utilizadas:",e)}}async run(){console.log("\uD83D\uDE80 ~ Iniciando deleção de pastas de testes antigas"),await this.eraseUnusedFolders(),console.log("\uD83D\uDE80 ~ Finalizando deleção de pastas de testes antigas")}};var Y={eraseUnusedFolders:B.eraseUnusedFolders.bind(B),runEraseUnusedFolders:B.run.bind(B),folderCleaner:B}.runEraseUnusedFolders;new class{constructor(){this.urlCMD=process.env.URL||"http://localhost:3001/",this.scenarios=D(this.urlCMD),this.scenarioConfigFinal=[]}async initialize(){let t=e.resolve(d,"..","user_data/");await M(e.resolve(d,"..","test/"),"Teste"),await H(t),console.log(`>>> Temos ao total ${3*this.scenarios.length} scenarios de teste ao total, sendo ${this.scenarios.length} de cada breakpoint. `)}async executeTests(e,t){await N(e,async e=>{await N(t,async t=>{let a=await q(t,e);this.scenarioConfigFinal.push(a),await R(t,e,"Rodando"),await p(t,e).catch(e=>{console.log(e)}),await L(t,e)})})}async reportResults(){let t=e.resolve(d,`${this.scenarioConfigFinal[0].today.split("/")[0]}`);await h.generate(U(t))}async cleanup(){await Y()}async run(){await this.initialize(),await this.executeTests(T,this.scenarios),await this.reportResults(),await this.cleanup()}}().run().catch(e=>console.log("Erro ao executar testes",e));
//# sourceMappingURL=index.js.map
